//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace P1618401.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private ds03DataTable tableds03;
        
        private ds0201DataTable tableds0201;
        
        private ds0202DataTable tableds0202;
        
        private ds04DataTable tableds04;
        
        private ds07DataTable tableds07;
        
        private ds09DataTable tableds09;
        
        private ds06DataTable tableds06;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ds03"] != null)) {
                    base.Tables.Add(new ds03DataTable(ds.Tables["ds03"]));
                }
                if ((ds.Tables["ds0201"] != null)) {
                    base.Tables.Add(new ds0201DataTable(ds.Tables["ds0201"]));
                }
                if ((ds.Tables["ds0202"] != null)) {
                    base.Tables.Add(new ds0202DataTable(ds.Tables["ds0202"]));
                }
                if ((ds.Tables["ds04"] != null)) {
                    base.Tables.Add(new ds04DataTable(ds.Tables["ds04"]));
                }
                if ((ds.Tables["ds07"] != null)) {
                    base.Tables.Add(new ds07DataTable(ds.Tables["ds07"]));
                }
                if ((ds.Tables["ds09"] != null)) {
                    base.Tables.Add(new ds09DataTable(ds.Tables["ds09"]));
                }
                if ((ds.Tables["ds06"] != null)) {
                    base.Tables.Add(new ds06DataTable(ds.Tables["ds06"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ds03DataTable ds03 {
            get {
                return this.tableds03;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ds0201DataTable ds0201 {
            get {
                return this.tableds0201;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ds0202DataTable ds0202 {
            get {
                return this.tableds0202;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ds04DataTable ds04 {
            get {
                return this.tableds04;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ds07DataTable ds07 {
            get {
                return this.tableds07;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ds09DataTable ds09 {
            get {
                return this.tableds09;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ds06DataTable ds06 {
            get {
                return this.tableds06;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ds03"] != null)) {
                    base.Tables.Add(new ds03DataTable(ds.Tables["ds03"]));
                }
                if ((ds.Tables["ds0201"] != null)) {
                    base.Tables.Add(new ds0201DataTable(ds.Tables["ds0201"]));
                }
                if ((ds.Tables["ds0202"] != null)) {
                    base.Tables.Add(new ds0202DataTable(ds.Tables["ds0202"]));
                }
                if ((ds.Tables["ds04"] != null)) {
                    base.Tables.Add(new ds04DataTable(ds.Tables["ds04"]));
                }
                if ((ds.Tables["ds07"] != null)) {
                    base.Tables.Add(new ds07DataTable(ds.Tables["ds07"]));
                }
                if ((ds.Tables["ds09"] != null)) {
                    base.Tables.Add(new ds09DataTable(ds.Tables["ds09"]));
                }
                if ((ds.Tables["ds06"] != null)) {
                    base.Tables.Add(new ds06DataTable(ds.Tables["ds06"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableds03 = ((ds03DataTable)(base.Tables["ds03"]));
            if ((initTable == true)) {
                if ((this.tableds03 != null)) {
                    this.tableds03.InitVars();
                }
            }
            this.tableds0201 = ((ds0201DataTable)(base.Tables["ds0201"]));
            if ((initTable == true)) {
                if ((this.tableds0201 != null)) {
                    this.tableds0201.InitVars();
                }
            }
            this.tableds0202 = ((ds0202DataTable)(base.Tables["ds0202"]));
            if ((initTable == true)) {
                if ((this.tableds0202 != null)) {
                    this.tableds0202.InitVars();
                }
            }
            this.tableds04 = ((ds04DataTable)(base.Tables["ds04"]));
            if ((initTable == true)) {
                if ((this.tableds04 != null)) {
                    this.tableds04.InitVars();
                }
            }
            this.tableds07 = ((ds07DataTable)(base.Tables["ds07"]));
            if ((initTable == true)) {
                if ((this.tableds07 != null)) {
                    this.tableds07.InitVars();
                }
            }
            this.tableds09 = ((ds09DataTable)(base.Tables["ds09"]));
            if ((initTable == true)) {
                if ((this.tableds09 != null)) {
                    this.tableds09.InitVars();
                }
            }
            this.tableds06 = ((ds06DataTable)(base.Tables["ds06"]));
            if ((initTable == true)) {
                if ((this.tableds06 != null)) {
                    this.tableds06.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableds03 = new ds03DataTable();
            base.Tables.Add(this.tableds03);
            this.tableds0201 = new ds0201DataTable();
            base.Tables.Add(this.tableds0201);
            this.tableds0202 = new ds0202DataTable();
            base.Tables.Add(this.tableds0202);
            this.tableds04 = new ds04DataTable();
            base.Tables.Add(this.tableds04);
            this.tableds07 = new ds07DataTable();
            base.Tables.Add(this.tableds07);
            this.tableds09 = new ds09DataTable();
            base.Tables.Add(this.tableds09);
            this.tableds06 = new ds06DataTable();
            base.Tables.Add(this.tableds06);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeds03() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeds0201() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeds0202() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeds04() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeds07() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeds09() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeds06() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void ds03RowChangeEventHandler(object sender, ds03RowChangeEvent e);
        
        public delegate void ds0201RowChangeEventHandler(object sender, ds0201RowChangeEvent e);
        
        public delegate void ds0202RowChangeEventHandler(object sender, ds0202RowChangeEvent e);
        
        public delegate void ds04RowChangeEventHandler(object sender, ds04RowChangeEvent e);
        
        public delegate void ds07RowChangeEventHandler(object sender, ds07RowChangeEvent e);
        
        public delegate void ds09RowChangeEventHandler(object sender, ds09RowChangeEvent e);
        
        public delegate void ds06RowChangeEventHandler(object sender, ds06RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ds03DataTable : global::System.Data.TypedTableBase<ds03Row> {
            
            private global::System.Data.DataColumn columnGlobalCode;
            
            private global::System.Data.DataColumn columnLocalCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnREAL_QTY;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds03DataTable() {
                this.TableName = "ds03";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds03DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ds03DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GlobalCodeColumn {
                get {
                    return this.columnGlobalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalCodeColumn {
                get {
                    return this.columnLocalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REAL_QTYColumn {
                get {
                    return this.columnREAL_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds03Row this[int index] {
                get {
                    return ((ds03Row)(this.Rows[index]));
                }
            }
            
            public event ds03RowChangeEventHandler ds03RowChanging;
            
            public event ds03RowChangeEventHandler ds03RowChanged;
            
            public event ds03RowChangeEventHandler ds03RowDeleting;
            
            public event ds03RowChangeEventHandler ds03RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addds03Row(ds03Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds03Row Addds03Row(string GlobalCode, string LocalCode, string Description, string REAL_QTY, string LOCATION) {
                ds03Row rowds03Row = ((ds03Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GlobalCode,
                        LocalCode,
                        Description,
                        REAL_QTY,
                        LOCATION};
                rowds03Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowds03Row);
                return rowds03Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ds03DataTable cln = ((ds03DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ds03DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGlobalCode = base.Columns["GlobalCode"];
                this.columnLocalCode = base.Columns["LocalCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnREAL_QTY = base.Columns["REAL_QTY"];
                this.columnLOCATION = base.Columns["LOCATION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGlobalCode = new global::System.Data.DataColumn("GlobalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlobalCode);
                this.columnLocalCode = new global::System.Data.DataColumn("LocalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnREAL_QTY = new global::System.Data.DataColumn("REAL_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREAL_QTY);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds03Row Newds03Row() {
                return ((ds03Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ds03Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ds03Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ds03RowChanged != null)) {
                    this.ds03RowChanged(this, new ds03RowChangeEvent(((ds03Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ds03RowChanging != null)) {
                    this.ds03RowChanging(this, new ds03RowChangeEvent(((ds03Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ds03RowDeleted != null)) {
                    this.ds03RowDeleted(this, new ds03RowChangeEvent(((ds03Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ds03RowDeleting != null)) {
                    this.ds03RowDeleting(this, new ds03RowChangeEvent(((ds03Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeds03Row(ds03Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ds03DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ds0201DataTable : global::System.Data.TypedTableBase<ds0201Row> {
            
            private global::System.Data.DataColumn columnGlobalCode;
            
            private global::System.Data.DataColumn columnLocalCode;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnREAL_QTY;
            
            private global::System.Data.DataColumn columnLAST_QTY;
            
            private global::System.Data.DataColumn columnR1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0201DataTable() {
                this.TableName = "ds0201";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds0201DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ds0201DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GlobalCodeColumn {
                get {
                    return this.columnGlobalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalCodeColumn {
                get {
                    return this.columnLocalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REAL_QTYColumn {
                get {
                    return this.columnREAL_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_QTYColumn {
                get {
                    return this.columnLAST_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn R1Column {
                get {
                    return this.columnR1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0201Row this[int index] {
                get {
                    return ((ds0201Row)(this.Rows[index]));
                }
            }
            
            public event ds0201RowChangeEventHandler ds0201RowChanging;
            
            public event ds0201RowChangeEventHandler ds0201RowChanged;
            
            public event ds0201RowChangeEventHandler ds0201RowDeleting;
            
            public event ds0201RowChangeEventHandler ds0201RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addds0201Row(ds0201Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0201Row Addds0201Row(string GlobalCode, string LocalCode, string Location, string REAL_QTY, string LAST_QTY, string R1) {
                ds0201Row rowds0201Row = ((ds0201Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GlobalCode,
                        LocalCode,
                        Location,
                        REAL_QTY,
                        LAST_QTY,
                        R1};
                rowds0201Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowds0201Row);
                return rowds0201Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ds0201DataTable cln = ((ds0201DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ds0201DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGlobalCode = base.Columns["GlobalCode"];
                this.columnLocalCode = base.Columns["LocalCode"];
                this.columnLocation = base.Columns["Location"];
                this.columnREAL_QTY = base.Columns["REAL_QTY"];
                this.columnLAST_QTY = base.Columns["LAST_QTY"];
                this.columnR1 = base.Columns["R1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGlobalCode = new global::System.Data.DataColumn("GlobalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlobalCode);
                this.columnLocalCode = new global::System.Data.DataColumn("LocalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalCode);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnREAL_QTY = new global::System.Data.DataColumn("REAL_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREAL_QTY);
                this.columnLAST_QTY = new global::System.Data.DataColumn("LAST_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_QTY);
                this.columnR1 = new global::System.Data.DataColumn("R1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR1);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0201Row Newds0201Row() {
                return ((ds0201Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ds0201Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ds0201Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ds0201RowChanged != null)) {
                    this.ds0201RowChanged(this, new ds0201RowChangeEvent(((ds0201Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ds0201RowChanging != null)) {
                    this.ds0201RowChanging(this, new ds0201RowChangeEvent(((ds0201Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ds0201RowDeleted != null)) {
                    this.ds0201RowDeleted(this, new ds0201RowChangeEvent(((ds0201Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ds0201RowDeleting != null)) {
                    this.ds0201RowDeleting(this, new ds0201RowChangeEvent(((ds0201Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeds0201Row(ds0201Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ds0201DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ds0202DataTable : global::System.Data.TypedTableBase<ds0202Row> {
            
            private global::System.Data.DataColumn columnGlobalCode;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnLAST_QTY;
            
            private global::System.Data.DataColumn columnINVE_QTY;
            
            private global::System.Data.DataColumn columnLocalCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0202DataTable() {
                this.TableName = "ds0202";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds0202DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ds0202DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GlobalCodeColumn {
                get {
                    return this.columnGlobalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LAST_QTYColumn {
                get {
                    return this.columnLAST_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVE_QTYColumn {
                get {
                    return this.columnINVE_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalCodeColumn {
                get {
                    return this.columnLocalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0202Row this[int index] {
                get {
                    return ((ds0202Row)(this.Rows[index]));
                }
            }
            
            public event ds0202RowChangeEventHandler ds0202RowChanging;
            
            public event ds0202RowChangeEventHandler ds0202RowChanged;
            
            public event ds0202RowChangeEventHandler ds0202RowDeleting;
            
            public event ds0202RowChangeEventHandler ds0202RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addds0202Row(ds0202Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0202Row Addds0202Row(string GlobalCode, string Location, string LAST_QTY, string INVE_QTY, string LocalCode, string Description) {
                ds0202Row rowds0202Row = ((ds0202Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GlobalCode,
                        Location,
                        LAST_QTY,
                        INVE_QTY,
                        LocalCode,
                        Description};
                rowds0202Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowds0202Row);
                return rowds0202Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ds0202DataTable cln = ((ds0202DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ds0202DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGlobalCode = base.Columns["GlobalCode"];
                this.columnLocation = base.Columns["Location"];
                this.columnLAST_QTY = base.Columns["LAST_QTY"];
                this.columnINVE_QTY = base.Columns["INVE_QTY"];
                this.columnLocalCode = base.Columns["LocalCode"];
                this.columnDescription = base.Columns["Description"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGlobalCode = new global::System.Data.DataColumn("GlobalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlobalCode);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnLAST_QTY = new global::System.Data.DataColumn("LAST_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAST_QTY);
                this.columnINVE_QTY = new global::System.Data.DataColumn("INVE_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVE_QTY);
                this.columnLocalCode = new global::System.Data.DataColumn("LocalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0202Row Newds0202Row() {
                return ((ds0202Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ds0202Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ds0202Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ds0202RowChanged != null)) {
                    this.ds0202RowChanged(this, new ds0202RowChangeEvent(((ds0202Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ds0202RowChanging != null)) {
                    this.ds0202RowChanging(this, new ds0202RowChangeEvent(((ds0202Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ds0202RowDeleted != null)) {
                    this.ds0202RowDeleted(this, new ds0202RowChangeEvent(((ds0202Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ds0202RowDeleting != null)) {
                    this.ds0202RowDeleting(this, new ds0202RowChangeEvent(((ds0202Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeds0202Row(ds0202Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ds0202DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ds04DataTable : global::System.Data.TypedTableBase<ds04Row> {
            
            private global::System.Data.DataColumn columnGlobalCode;
            
            private global::System.Data.DataColumn columnLocalCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUSystem;
            
            private global::System.Data.DataColumn columnSTOCK_QTY;
            
            private global::System.Data.DataColumn columnLOCATION;
            
            private global::System.Data.DataColumn columnREAL_QTY;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnTRANS_DATE;
            
            private global::System.Data.DataColumn columnQTY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds04DataTable() {
                this.TableName = "ds04";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds04DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ds04DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GlobalCodeColumn {
                get {
                    return this.columnGlobalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalCodeColumn {
                get {
                    return this.columnLocalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USystemColumn {
                get {
                    return this.columnUSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOCK_QTYColumn {
                get {
                    return this.columnSTOCK_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCATIONColumn {
                get {
                    return this.columnLOCATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REAL_QTYColumn {
                get {
                    return this.columnREAL_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANS_DATEColumn {
                get {
                    return this.columnTRANS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds04Row this[int index] {
                get {
                    return ((ds04Row)(this.Rows[index]));
                }
            }
            
            public event ds04RowChangeEventHandler ds04RowChanging;
            
            public event ds04RowChangeEventHandler ds04RowChanged;
            
            public event ds04RowChangeEventHandler ds04RowDeleting;
            
            public event ds04RowChangeEventHandler ds04RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addds04Row(ds04Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds04Row Addds04Row(string GlobalCode, string LocalCode, string Description, string USystem, string STOCK_QTY, string LOCATION, string REAL_QTY, string STATUS, string TRANS_DATE, string QTY) {
                ds04Row rowds04Row = ((ds04Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GlobalCode,
                        LocalCode,
                        Description,
                        USystem,
                        STOCK_QTY,
                        LOCATION,
                        REAL_QTY,
                        STATUS,
                        TRANS_DATE,
                        QTY};
                rowds04Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowds04Row);
                return rowds04Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ds04DataTable cln = ((ds04DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ds04DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGlobalCode = base.Columns["GlobalCode"];
                this.columnLocalCode = base.Columns["LocalCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnUSystem = base.Columns["USystem"];
                this.columnSTOCK_QTY = base.Columns["STOCK_QTY"];
                this.columnLOCATION = base.Columns["LOCATION"];
                this.columnREAL_QTY = base.Columns["REAL_QTY"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnTRANS_DATE = base.Columns["TRANS_DATE"];
                this.columnQTY = base.Columns["QTY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGlobalCode = new global::System.Data.DataColumn("GlobalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlobalCode);
                this.columnLocalCode = new global::System.Data.DataColumn("LocalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUSystem = new global::System.Data.DataColumn("USystem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSystem);
                this.columnSTOCK_QTY = new global::System.Data.DataColumn("STOCK_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_QTY);
                this.columnLOCATION = new global::System.Data.DataColumn("LOCATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCATION);
                this.columnREAL_QTY = new global::System.Data.DataColumn("REAL_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREAL_QTY);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnTRANS_DATE = new global::System.Data.DataColumn("TRANS_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANS_DATE);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds04Row Newds04Row() {
                return ((ds04Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ds04Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ds04Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ds04RowChanged != null)) {
                    this.ds04RowChanged(this, new ds04RowChangeEvent(((ds04Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ds04RowChanging != null)) {
                    this.ds04RowChanging(this, new ds04RowChangeEvent(((ds04Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ds04RowDeleted != null)) {
                    this.ds04RowDeleted(this, new ds04RowChangeEvent(((ds04Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ds04RowDeleting != null)) {
                    this.ds04RowDeleting(this, new ds04RowChangeEvent(((ds04Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeds04Row(ds04Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ds04DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ds07DataTable : global::System.Data.TypedTableBase<ds07Row> {
            
            private global::System.Data.DataColumn columnGCode;
            
            private global::System.Data.DataColumn columnLCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnIN_QTY;
            
            private global::System.Data.DataColumn columnOUT_QTY;
            
            private global::System.Data.DataColumn columnStock_QTY;
            
            private global::System.Data.DataColumn columnCustNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds07DataTable() {
                this.TableName = "ds07";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds07DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ds07DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GCodeColumn {
                get {
                    return this.columnGCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCodeColumn {
                get {
                    return this.columnLCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IN_QTYColumn {
                get {
                    return this.columnIN_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OUT_QTYColumn {
                get {
                    return this.columnOUT_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Stock_QTYColumn {
                get {
                    return this.columnStock_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustNoColumn {
                get {
                    return this.columnCustNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds07Row this[int index] {
                get {
                    return ((ds07Row)(this.Rows[index]));
                }
            }
            
            public event ds07RowChangeEventHandler ds07RowChanging;
            
            public event ds07RowChangeEventHandler ds07RowChanged;
            
            public event ds07RowChangeEventHandler ds07RowDeleting;
            
            public event ds07RowChangeEventHandler ds07RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addds07Row(ds07Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds07Row Addds07Row(string GCode, string LCode, string Description, string Location, string IN_QTY, string OUT_QTY, string Stock_QTY, string CustNo) {
                ds07Row rowds07Row = ((ds07Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GCode,
                        LCode,
                        Description,
                        Location,
                        IN_QTY,
                        OUT_QTY,
                        Stock_QTY,
                        CustNo};
                rowds07Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowds07Row);
                return rowds07Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ds07DataTable cln = ((ds07DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ds07DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGCode = base.Columns["GCode"];
                this.columnLCode = base.Columns["LCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnLocation = base.Columns["Location"];
                this.columnIN_QTY = base.Columns["IN_QTY"];
                this.columnOUT_QTY = base.Columns["OUT_QTY"];
                this.columnStock_QTY = base.Columns["Stock_QTY"];
                this.columnCustNo = base.Columns["CustNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGCode = new global::System.Data.DataColumn("GCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCode);
                this.columnLCode = new global::System.Data.DataColumn("LCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnIN_QTY = new global::System.Data.DataColumn("IN_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIN_QTY);
                this.columnOUT_QTY = new global::System.Data.DataColumn("OUT_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUT_QTY);
                this.columnStock_QTY = new global::System.Data.DataColumn("Stock_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStock_QTY);
                this.columnCustNo = new global::System.Data.DataColumn("CustNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustNo);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds07Row Newds07Row() {
                return ((ds07Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ds07Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ds07Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ds07RowChanged != null)) {
                    this.ds07RowChanged(this, new ds07RowChangeEvent(((ds07Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ds07RowChanging != null)) {
                    this.ds07RowChanging(this, new ds07RowChangeEvent(((ds07Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ds07RowDeleted != null)) {
                    this.ds07RowDeleted(this, new ds07RowChangeEvent(((ds07Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ds07RowDeleting != null)) {
                    this.ds07RowDeleting(this, new ds07RowChangeEvent(((ds07Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeds07Row(ds07Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ds07DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ds09DataTable : global::System.Data.TypedTableBase<ds09Row> {
            
            private global::System.Data.DataColumn columnGCode;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnQTY;
            
            private global::System.Data.DataColumn columnTRANS_DATE;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnUSER_ID;
            
            private global::System.Data.DataColumn columnCustno;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds09DataTable() {
                this.TableName = "ds09";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds09DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ds09DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GCodeColumn {
                get {
                    return this.columnGCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTYColumn {
                get {
                    return this.columnQTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRANS_DATEColumn {
                get {
                    return this.columnTRANS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USER_IDColumn {
                get {
                    return this.columnUSER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CustnoColumn {
                get {
                    return this.columnCustno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds09Row this[int index] {
                get {
                    return ((ds09Row)(this.Rows[index]));
                }
            }
            
            public event ds09RowChangeEventHandler ds09RowChanging;
            
            public event ds09RowChangeEventHandler ds09RowChanged;
            
            public event ds09RowChangeEventHandler ds09RowDeleting;
            
            public event ds09RowChangeEventHandler ds09RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addds09Row(ds09Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds09Row Addds09Row(string GCode, string Location, string QTY, string TRANS_DATE, string STATUS, string USER_ID, string Custno) {
                ds09Row rowds09Row = ((ds09Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GCode,
                        Location,
                        QTY,
                        TRANS_DATE,
                        STATUS,
                        USER_ID,
                        Custno};
                rowds09Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowds09Row);
                return rowds09Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ds09DataTable cln = ((ds09DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ds09DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGCode = base.Columns["GCode"];
                this.columnLocation = base.Columns["Location"];
                this.columnQTY = base.Columns["QTY"];
                this.columnTRANS_DATE = base.Columns["TRANS_DATE"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnUSER_ID = base.Columns["USER_ID"];
                this.columnCustno = base.Columns["Custno"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGCode = new global::System.Data.DataColumn("GCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCode);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnQTY = new global::System.Data.DataColumn("QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQTY);
                this.columnTRANS_DATE = new global::System.Data.DataColumn("TRANS_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANS_DATE);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnUSER_ID = new global::System.Data.DataColumn("USER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSER_ID);
                this.columnCustno = new global::System.Data.DataColumn("Custno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustno);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds09Row Newds09Row() {
                return ((ds09Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ds09Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ds09Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ds09RowChanged != null)) {
                    this.ds09RowChanged(this, new ds09RowChangeEvent(((ds09Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ds09RowChanging != null)) {
                    this.ds09RowChanging(this, new ds09RowChangeEvent(((ds09Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ds09RowDeleted != null)) {
                    this.ds09RowDeleted(this, new ds09RowChangeEvent(((ds09Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ds09RowDeleting != null)) {
                    this.ds09RowDeleting(this, new ds09RowChangeEvent(((ds09Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeds09Row(ds09Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ds09DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ds06DataTable : global::System.Data.TypedTableBase<ds06Row> {
            
            private global::System.Data.DataColumn columnGlobalCode;
            
            private global::System.Data.DataColumn columnLocalCode;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnUSystem;
            
            private global::System.Data.DataColumn columnSafe_Qty;
            
            private global::System.Data.DataColumn columnSTOCK_QTY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds06DataTable() {
                this.TableName = "ds06";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds06DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ds06DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GlobalCodeColumn {
                get {
                    return this.columnGlobalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalCodeColumn {
                get {
                    return this.columnLocalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USystemColumn {
                get {
                    return this.columnUSystem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Safe_QtyColumn {
                get {
                    return this.columnSafe_Qty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STOCK_QTYColumn {
                get {
                    return this.columnSTOCK_QTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds06Row this[int index] {
                get {
                    return ((ds06Row)(this.Rows[index]));
                }
            }
            
            public event ds06RowChangeEventHandler ds06RowChanging;
            
            public event ds06RowChangeEventHandler ds06RowChanged;
            
            public event ds06RowChangeEventHandler ds06RowDeleting;
            
            public event ds06RowChangeEventHandler ds06RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addds06Row(ds06Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds06Row Addds06Row(string GlobalCode, string LocalCode, string Description, string USystem, string Safe_Qty, string STOCK_QTY) {
                ds06Row rowds06Row = ((ds06Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GlobalCode,
                        LocalCode,
                        Description,
                        USystem,
                        Safe_Qty,
                        STOCK_QTY};
                rowds06Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowds06Row);
                return rowds06Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ds06DataTable cln = ((ds06DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ds06DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGlobalCode = base.Columns["GlobalCode"];
                this.columnLocalCode = base.Columns["LocalCode"];
                this.columnDescription = base.Columns["Description"];
                this.columnUSystem = base.Columns["USystem"];
                this.columnSafe_Qty = base.Columns["Safe_Qty"];
                this.columnSTOCK_QTY = base.Columns["STOCK_QTY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGlobalCode = new global::System.Data.DataColumn("GlobalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGlobalCode);
                this.columnLocalCode = new global::System.Data.DataColumn("LocalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalCode);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnUSystem = new global::System.Data.DataColumn("USystem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSystem);
                this.columnSafe_Qty = new global::System.Data.DataColumn("Safe_Qty", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafe_Qty);
                this.columnSTOCK_QTY = new global::System.Data.DataColumn("STOCK_QTY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOCK_QTY);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds06Row Newds06Row() {
                return ((ds06Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ds06Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ds06Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ds06RowChanged != null)) {
                    this.ds06RowChanged(this, new ds06RowChangeEvent(((ds06Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ds06RowChanging != null)) {
                    this.ds06RowChanging(this, new ds06RowChangeEvent(((ds06Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ds06RowDeleted != null)) {
                    this.ds06RowDeleted(this, new ds06RowChangeEvent(((ds06Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ds06RowDeleting != null)) {
                    this.ds06RowDeleting(this, new ds06RowChangeEvent(((ds06Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeds06Row(ds06Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ds06DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ds03Row : global::System.Data.DataRow {
            
            private ds03DataTable tableds03;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds03Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableds03 = ((ds03DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GlobalCode {
                get {
                    try {
                        return ((string)(this[this.tableds03.GlobalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlobalCode\' in table \'ds03\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds03.GlobalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocalCode {
                get {
                    try {
                        return ((string)(this[this.tableds03.LocalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalCode\' in table \'ds03\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds03.LocalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableds03.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ds03\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds03.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REAL_QTY {
                get {
                    try {
                        return ((string)(this[this.tableds03.REAL_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REAL_QTY\' in table \'ds03\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds03.REAL_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableds03.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'ds03\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds03.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGlobalCodeNull() {
                return this.IsNull(this.tableds03.GlobalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGlobalCodeNull() {
                this[this.tableds03.GlobalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalCodeNull() {
                return this.IsNull(this.tableds03.LocalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalCodeNull() {
                this[this.tableds03.LocalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableds03.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableds03.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREAL_QTYNull() {
                return this.IsNull(this.tableds03.REAL_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREAL_QTYNull() {
                this[this.tableds03.REAL_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tableds03.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATIONNull() {
                this[this.tableds03.LOCATIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ds0201Row : global::System.Data.DataRow {
            
            private ds0201DataTable tableds0201;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds0201Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableds0201 = ((ds0201DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GlobalCode {
                get {
                    try {
                        return ((string)(this[this.tableds0201.GlobalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlobalCode\' in table \'ds0201\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0201.GlobalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocalCode {
                get {
                    try {
                        return ((string)(this[this.tableds0201.LocalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalCode\' in table \'ds0201\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0201.LocalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableds0201.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'ds0201\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0201.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REAL_QTY {
                get {
                    try {
                        return ((string)(this[this.tableds0201.REAL_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REAL_QTY\' in table \'ds0201\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0201.REAL_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_QTY {
                get {
                    try {
                        return ((string)(this[this.tableds0201.LAST_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAST_QTY\' in table \'ds0201\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0201.LAST_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string R1 {
                get {
                    try {
                        return ((string)(this[this.tableds0201.R1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'R1\' in table \'ds0201\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0201.R1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGlobalCodeNull() {
                return this.IsNull(this.tableds0201.GlobalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGlobalCodeNull() {
                this[this.tableds0201.GlobalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalCodeNull() {
                return this.IsNull(this.tableds0201.LocalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalCodeNull() {
                this[this.tableds0201.LocalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableds0201.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableds0201.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREAL_QTYNull() {
                return this.IsNull(this.tableds0201.REAL_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREAL_QTYNull() {
                this[this.tableds0201.REAL_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_QTYNull() {
                return this.IsNull(this.tableds0201.LAST_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_QTYNull() {
                this[this.tableds0201.LAST_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsR1Null() {
                return this.IsNull(this.tableds0201.R1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetR1Null() {
                this[this.tableds0201.R1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ds0202Row : global::System.Data.DataRow {
            
            private ds0202DataTable tableds0202;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds0202Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableds0202 = ((ds0202DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GlobalCode {
                get {
                    try {
                        return ((string)(this[this.tableds0202.GlobalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlobalCode\' in table \'ds0202\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0202.GlobalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableds0202.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'ds0202\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0202.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LAST_QTY {
                get {
                    try {
                        return ((string)(this[this.tableds0202.LAST_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LAST_QTY\' in table \'ds0202\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0202.LAST_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVE_QTY {
                get {
                    try {
                        return ((string)(this[this.tableds0202.INVE_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INVE_QTY\' in table \'ds0202\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0202.INVE_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocalCode {
                get {
                    try {
                        return ((string)(this[this.tableds0202.LocalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalCode\' in table \'ds0202\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0202.LocalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableds0202.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ds0202\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds0202.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGlobalCodeNull() {
                return this.IsNull(this.tableds0202.GlobalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGlobalCodeNull() {
                this[this.tableds0202.GlobalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableds0202.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableds0202.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLAST_QTYNull() {
                return this.IsNull(this.tableds0202.LAST_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLAST_QTYNull() {
                this[this.tableds0202.LAST_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVE_QTYNull() {
                return this.IsNull(this.tableds0202.INVE_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVE_QTYNull() {
                this[this.tableds0202.INVE_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalCodeNull() {
                return this.IsNull(this.tableds0202.LocalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalCodeNull() {
                this[this.tableds0202.LocalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableds0202.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableds0202.DescriptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ds04Row : global::System.Data.DataRow {
            
            private ds04DataTable tableds04;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds04Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableds04 = ((ds04DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GlobalCode {
                get {
                    try {
                        return ((string)(this[this.tableds04.GlobalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlobalCode\' in table \'ds04\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds04.GlobalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocalCode {
                get {
                    try {
                        return ((string)(this[this.tableds04.LocalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalCode\' in table \'ds04\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds04.LocalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableds04.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ds04\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds04.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USystem {
                get {
                    try {
                        return ((string)(this[this.tableds04.USystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USystem\' in table \'ds04\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds04.USystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STOCK_QTY {
                get {
                    try {
                        return ((string)(this[this.tableds04.STOCK_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK_QTY\' in table \'ds04\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds04.STOCK_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCATION {
                get {
                    try {
                        return ((string)(this[this.tableds04.LOCATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOCATION\' in table \'ds04\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds04.LOCATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REAL_QTY {
                get {
                    try {
                        return ((string)(this[this.tableds04.REAL_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'REAL_QTY\' in table \'ds04\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds04.REAL_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableds04.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'ds04\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds04.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANS_DATE {
                get {
                    try {
                        return ((string)(this[this.tableds04.TRANS_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRANS_DATE\' in table \'ds04\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds04.TRANS_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QTY {
                get {
                    try {
                        return ((string)(this[this.tableds04.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTY\' in table \'ds04\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds04.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGlobalCodeNull() {
                return this.IsNull(this.tableds04.GlobalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGlobalCodeNull() {
                this[this.tableds04.GlobalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalCodeNull() {
                return this.IsNull(this.tableds04.LocalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalCodeNull() {
                this[this.tableds04.LocalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableds04.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableds04.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSystemNull() {
                return this.IsNull(this.tableds04.USystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSystemNull() {
                this[this.tableds04.USystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOCK_QTYNull() {
                return this.IsNull(this.tableds04.STOCK_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOCK_QTYNull() {
                this[this.tableds04.STOCK_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCATIONNull() {
                return this.IsNull(this.tableds04.LOCATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCATIONNull() {
                this[this.tableds04.LOCATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREAL_QTYNull() {
                return this.IsNull(this.tableds04.REAL_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREAL_QTYNull() {
                this[this.tableds04.REAL_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableds04.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableds04.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANS_DATENull() {
                return this.IsNull(this.tableds04.TRANS_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANS_DATENull() {
                this[this.tableds04.TRANS_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTYNull() {
                return this.IsNull(this.tableds04.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTYNull() {
                this[this.tableds04.QTYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ds07Row : global::System.Data.DataRow {
            
            private ds07DataTable tableds07;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds07Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableds07 = ((ds07DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GCode {
                get {
                    try {
                        return ((string)(this[this.tableds07.GCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GCode\' in table \'ds07\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds07.GCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LCode {
                get {
                    try {
                        return ((string)(this[this.tableds07.LCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LCode\' in table \'ds07\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds07.LCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableds07.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ds07\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds07.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableds07.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'ds07\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds07.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IN_QTY {
                get {
                    try {
                        return ((string)(this[this.tableds07.IN_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IN_QTY\' in table \'ds07\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds07.IN_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OUT_QTY {
                get {
                    try {
                        return ((string)(this[this.tableds07.OUT_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OUT_QTY\' in table \'ds07\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds07.OUT_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Stock_QTY {
                get {
                    try {
                        return ((string)(this[this.tableds07.Stock_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stock_QTY\' in table \'ds07\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds07.Stock_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CustNo {
                get {
                    try {
                        return ((string)(this[this.tableds07.CustNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustNo\' in table \'ds07\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds07.CustNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGCodeNull() {
                return this.IsNull(this.tableds07.GCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGCodeNull() {
                this[this.tableds07.GCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLCodeNull() {
                return this.IsNull(this.tableds07.LCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLCodeNull() {
                this[this.tableds07.LCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableds07.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableds07.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableds07.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableds07.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIN_QTYNull() {
                return this.IsNull(this.tableds07.IN_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIN_QTYNull() {
                this[this.tableds07.IN_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOUT_QTYNull() {
                return this.IsNull(this.tableds07.OUT_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOUT_QTYNull() {
                this[this.tableds07.OUT_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStock_QTYNull() {
                return this.IsNull(this.tableds07.Stock_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStock_QTYNull() {
                this[this.tableds07.Stock_QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustNoNull() {
                return this.IsNull(this.tableds07.CustNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustNoNull() {
                this[this.tableds07.CustNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ds09Row : global::System.Data.DataRow {
            
            private ds09DataTable tableds09;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds09Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableds09 = ((ds09DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GCode {
                get {
                    try {
                        return ((string)(this[this.tableds09.GCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GCode\' in table \'ds09\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds09.GCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableds09.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'ds09\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds09.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QTY {
                get {
                    try {
                        return ((string)(this[this.tableds09.QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QTY\' in table \'ds09\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds09.QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRANS_DATE {
                get {
                    try {
                        return ((string)(this[this.tableds09.TRANS_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRANS_DATE\' in table \'ds09\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds09.TRANS_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    try {
                        return ((string)(this[this.tableds09.STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STATUS\' in table \'ds09\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds09.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USER_ID {
                get {
                    try {
                        return ((string)(this[this.tableds09.USER_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USER_ID\' in table \'ds09\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds09.USER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Custno {
                get {
                    try {
                        return ((string)(this[this.tableds09.CustnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Custno\' in table \'ds09\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds09.CustnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGCodeNull() {
                return this.IsNull(this.tableds09.GCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGCodeNull() {
                this[this.tableds09.GCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableds09.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableds09.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTYNull() {
                return this.IsNull(this.tableds09.QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTYNull() {
                this[this.tableds09.QTYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRANS_DATENull() {
                return this.IsNull(this.tableds09.TRANS_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRANS_DATENull() {
                this[this.tableds09.TRANS_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableds09.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableds09.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSER_IDNull() {
                return this.IsNull(this.tableds09.USER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSER_IDNull() {
                this[this.tableds09.USER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCustnoNull() {
                return this.IsNull(this.tableds09.CustnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCustnoNull() {
                this[this.tableds09.CustnoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ds06Row : global::System.Data.DataRow {
            
            private ds06DataTable tableds06;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ds06Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableds06 = ((ds06DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GlobalCode {
                get {
                    try {
                        return ((string)(this[this.tableds06.GlobalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GlobalCode\' in table \'ds06\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds06.GlobalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocalCode {
                get {
                    try {
                        return ((string)(this[this.tableds06.LocalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalCode\' in table \'ds06\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds06.LocalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableds06.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'ds06\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds06.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USystem {
                get {
                    try {
                        return ((string)(this[this.tableds06.USystemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'USystem\' in table \'ds06\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds06.USystemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Safe_Qty {
                get {
                    try {
                        return ((string)(this[this.tableds06.Safe_QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Safe_Qty\' in table \'ds06\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds06.Safe_QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STOCK_QTY {
                get {
                    try {
                        return ((string)(this[this.tableds06.STOCK_QTYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'STOCK_QTY\' in table \'ds06\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableds06.STOCK_QTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGlobalCodeNull() {
                return this.IsNull(this.tableds06.GlobalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGlobalCodeNull() {
                this[this.tableds06.GlobalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalCodeNull() {
                return this.IsNull(this.tableds06.LocalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalCodeNull() {
                this[this.tableds06.LocalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableds06.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableds06.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUSystemNull() {
                return this.IsNull(this.tableds06.USystemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUSystemNull() {
                this[this.tableds06.USystemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafe_QtyNull() {
                return this.IsNull(this.tableds06.Safe_QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafe_QtyNull() {
                this[this.tableds06.Safe_QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTOCK_QTYNull() {
                return this.IsNull(this.tableds06.STOCK_QTYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTOCK_QTYNull() {
                this[this.tableds06.STOCK_QTYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ds03RowChangeEvent : global::System.EventArgs {
            
            private ds03Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds03RowChangeEvent(ds03Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds03Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ds0201RowChangeEvent : global::System.EventArgs {
            
            private ds0201Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0201RowChangeEvent(ds0201Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0201Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ds0202RowChangeEvent : global::System.EventArgs {
            
            private ds0202Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0202RowChangeEvent(ds0202Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds0202Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ds04RowChangeEvent : global::System.EventArgs {
            
            private ds04Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds04RowChangeEvent(ds04Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds04Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ds07RowChangeEvent : global::System.EventArgs {
            
            private ds07Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds07RowChangeEvent(ds07Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds07Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ds09RowChangeEvent : global::System.EventArgs {
            
            private ds09Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds09RowChangeEvent(ds09Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds09Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ds06RowChangeEvent : global::System.EventArgs {
            
            private ds06Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds06RowChangeEvent(ds06Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ds06Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591